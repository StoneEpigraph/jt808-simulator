use std::io;
use std::io::{Read, Write};
use std::net::TcpStream;
use std::str;

mod common;

fn main() {
    // 建立连接
    let mut _stream = TcpStream::connect("127.0.0.1:8891").unwrap();
    // let mut vec: Vec<u8> = vec![0x7E,0x01,0x00,0x40,0x54,0x01,0x00,0x00,0x00,0x00,0x04,0x09,0x65,0x96,0x87,0x14,0x00,0x01,0x00,0x00,0x00,0x00,0x43,0x4D,0x53,0x4F,0x46,0x54,0x2E,0x43,0x4E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x4D,0x38,0x30,0x38,0x2D,0x31,0x30,0x30,0x59,0x42,0x41,0x55,0x55,0x51,0x30,0x58,0x52,0x4F,0x50,0x44,0x42,0x59,0x4D,0x4C,0x43,0x4B,0x55,0x53,0x42,0x4E,0x59,0x41,0x34,0x57,0x4C,0x41,0x50,0x55,0x02,0xBE,0xA9,0x41,0x45,0x4D,0x30,0x39,0x39,0x14,0x7E];
    // let mut vec: Vec<u8> = vec![0x02,0x00,0x40,0x52,0x01,0x00,0x00,0x00,0x00,0x04,0x09,0x65,0x96,0x87,0x14,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x01,0x01,0xE8,0xEB,0x52,0x07,0x14,0x80,0x81,0x00,0x00,0x01,0x2C,0x00,0x00,0x23,0x10,0x11,0x10,0x06,0x38,0x51,0x38,0x00,0x10,0x01,0x00,0x02,0x23,0x10,0x11,0x10,0x10,0x10,0x59,0x42,0x41,0x55,0x55,0x51,0x30,0x58,0x52,0x4F,0x50,0x44,0x42,0x59,0x4D,0x4C,0x43,0x4B,0x55,0x53,0x42,0x4E,0x59,0x41,0x34,0x57,0x4C,0x41,0x50,0x55,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00];
    let mut vec: Vec<u8> = vec![0x02,0x00,0x40,0x1C,0x01,0x00,0x00,0x00,0x00,0x04,0x09,0x65,0x96,0x87,0x14,0x00,0x0E,0x00,0x00,0x00,0x03,0x00,0x40,0x00,0x01,0x01,0xE8,0xEB,0x52,0x07,0x14,0x80,0x81,0x00,0x00,0x08,0xFC,0x00,0x00,0x23,0x10,0x11,0x14,0x23,0x47];
    // 核验码
    let mut verify_code: u8 = 0u8;
    for &i in vec.iter() {
        verify_code ^= i;
    }
    // println!("{:?}", verify_code);
    let mut request_content:Vec<u8> = vec![0x7E];
    request_content.extend(vec);
    request_content.push(verify_code);
    request_content.push(0x7E);
    println!("{:02X?}", request_content);
    let slice: &mut [u8] = request_content.as_mut_slice();
    _stream.write(slice).unwrap();
    let mut buf = [0; 32];
    _stream.read(&mut buf).unwrap();
    // println!("{:02X?}", buf);
    common::format_request_body(&buf)
}
